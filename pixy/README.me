The CMUcam5 Pixy (http://cmucam.org/projects/cmucam5) 

Pixy is Legal For FTC 2017 

Official Q & A #5 - https://ftcforum.usfirst.org/forum/i-first-i-tech-challenge-game-q-and-a-forum-this-is-a-moderated-forum/first-relic-recovery-presented-by-qualcomm-game-q-a-forum/robot-inspection-rules/answers-electrical-materials/50464-sensors-answers



 The summary of the changes were to add an FTC mode which is an enhanced version of the Lego mode with an assignable
 I2C address as Lego is hard coded to 1 and to allow the request of mulitple blocks per signature but keeping
 the Modern Robotics Core Device Interface Module I2C 27 byte hardware limit in mind.
 
Added I2C Registers for 
 0x70 top 5 Largest Areas Blocks of Signature 1-7 	26 Bytes 	byte Total Visable BlockCount, 5 x [byte signature, byte x, byte y, byte width, byte height]
 0x71 top 6 Largest Areas Blocks of Signature 1 	25 Bytes 	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x72 top 6 Largest Areas Blocks of Signature 1 	25 Bytes  	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x73 top 6 Largest Areas Blocks of Signature 1 	25 Bytes  	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x74 top 6 Largest Areas Blocks of Signature 1 	25 Bytes  	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x75 top 6 Largest Areas Blocks of Signature 1 	25 Bytes  	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x76 top 6 Largest Areas Blocks of Signature 1 	25 Bytes	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x77 top 6 Largest Areas Blocks of Signature 1 	25 Bytes	byte Total Visable BlockCount, 6 x [byte x, byte y, byte width, byte height]
 0x78 top 4 Largest Areas Blocks of All CC Signatures 25 Bytes	byte Total Visable BlockCount, 4 x [word signature, byte x, byte y, byte width, byte height]

Steps to Use Pixy FTC Firmware
 Upload Custom Firmware to Pixy found in this Folder. 
	Hold White Button, Plug in USB, Open PixyMon, upload Hex File in this Folder.
 Using PixyMon Set Interface to "FTC I2C".  Note I2C Address will use the Address set in PixyMon defaults to 0x54.
	Please Note that FTC I2C mode will not give valid results until pixymon is closed. 
	You can tell I2C is working as Pixy front LED color changes to largest detected object color.
	Also We have bumped the Firmware Version to 2.0.20 so About in Pixy Mon will return 2.0.2 Firmware is you have correct loaded the FTC Firmware
 
	FTC Wiring do not use 10 pin header for Power use JP1 as it has polarity protection and a protective Diode not to power Dim from Pixy Usb. 
		I used an AndyMark Encoder Cable an lifted the little black tabs and pressed the silver tabs down 
		to rearanged the colors as a quick solid cable. (See Jpg This Folder)
		Correct part numbers for Connectors can be found on CharmLabs Wiki 
	My State allowed out team to power via USB and just wire the SDA and SCL I2C pins to the DIM. This may not be acceptable to all judges as I2C sensor.
	All communications to FTC application are via I2C to complily with rules.  

 Future enhancments I plan to work on are
 1. Add top 6 largest objects for a signature not just the largest. Complete 12/4/2017
 2. Add top 5 largest objects for Color Code Querys. Complete 12/4/2017
 3. Add top 4 Color Code Querys. Complete 12/4/2017
 4. Add top 4 of Specific Color Code. Complete 12/06/2017
 5. Allow setting of Pixy Params via I2C
    It has been reported that Pixy will drop its parameters in a brown out ie low voltage state
    The would also allow FTC program to set colors its looking for at run time removing the need for a pc
 6. Add "FTC I2C" to PixyMon Interface so not to break Lego I2C as I change I2C address so it is not 0x01.  Complete 12/21/2017
 7. Create Andriod App to use libusb to configure Pixy signatures. PixyMon is made using QT but uses libusb which appears to have some Andriod issues in marshmello. 
	We are not very experinced ie no expreince using QT for developing Gui Apps so not sure how doable Andriod app will be, but very usefull to help visualy see what targets
	robot is seeing and to set the brightness and signature colors.  


To use the Color Code Querys
123 in Octal is 83 in Decimal so we are looking for sig 1 next to sig 2 next to sig 3
To figure out the decimal code to query for in windows open calculator click view then programmer click octal radio button
Type in Signatures numbers in the lowest to highest you want stacked  ie I want color 2 next to color for in octal is 24 converted to dec is 20


 Special thanks to Olavi Kamppari and his FTC Wire Library https://github.com/OliviliK/FTC_Library made I2C a lot easier.

 Control Freaks Vicksburg Middle School, Michigan FTC 5618 and FTC 6494, Put It Together! Take It Apart!


 This is a modified version of the Pixy firmware and our modifications to the pixy source can be found
 on our github page at https://github.com/Andrewiski/pixy
 We was able to download a free copy of LPCXpresso v8.2.2 for Windows (8.1 in my case) and build the firmware.

https://www.nxp.com/support/developer-resources/software-development-tools/lpc-developer-resources-/lpc-microcontroller-utilities/lpcxpresso-ide-v8.2.2:LPCXPRESSO

https://nxp.flexnetoperations.com/control/frse/download?agree=Accept&element=7632767

  Things to note for the firmware build is you must execute the copy of the common source before any other build as in the build_this_first folder.
  Next builds must happen in this order.
  libpixy_m0
  libpixy_m4
  main_m0
  main_m4

  After the build in the source folder \src\device\main_m4\SPIFI there will be a pixy_firmware.hex file that can be loaded onto the pixy using the pixyMon application

  To program a custom firmware hold the white button before pluging into the computer with pixyMon running.
  It will detect pixy in programing mode and prompt for a hex file to load.

